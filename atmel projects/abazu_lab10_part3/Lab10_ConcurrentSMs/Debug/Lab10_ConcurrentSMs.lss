
Lab10_ConcurrentSMs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000314  000003a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000314  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800104  00800104  000003ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b78  00000000  00000000  00000484  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008c6  00000000  00000000  00000ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000440  00000000  00000000  000018c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d4  00000000  00000000  00001d04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055a  00000000  00000000  00001dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a8  00000000  00000000  00002332  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000025da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e1       	ldi	r30, 0x14	; 20
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 30       	cpi	r26, 0x0C	; 12
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	de d0       	rcall	.+444    	; 0x280 <main>
  c4:	25 c1       	rjmp	.+586    	; 0x310 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_13>:
void TimerOff() {
	TCCR1B = 0x00;
}

void TimerISR() {
	TimerFlag = 1;
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
  de:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
  e2:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
  e6:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	a1 09       	sbc	r26, r1
  ee:	b1 09       	sbc	r27, r1
  f0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
  f4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
  f8:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
  fc:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 100:	89 2b       	or	r24, r25
 102:	8a 2b       	or	r24, r26
 104:	8b 2b       	or	r24, r27
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_13+0x66>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <TimerFlag>
 10e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 112:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 116:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 11a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 11e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 122:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 126:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 12a:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <blinkLED>:
 140:	99 23       	and	r25, r25
 142:	34 f0       	brlt	.+12     	; 0x150 <blinkLED+0x10>
 144:	82 30       	cpi	r24, 0x02	; 2
 146:	91 05       	cpc	r25, r1
 148:	84 f0       	brlt	.+32     	; 0x16a <blinkLED+0x2a>
 14a:	82 30       	cpi	r24, 0x02	; 2
 14c:	91 05       	cpc	r25, r1
 14e:	39 f0       	breq	.+14     	; 0x15e <blinkLED+0x1e>
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	91 05       	cpc	r25, r1
 154:	21 f0       	breq	.+8      	; 0x15e <blinkLED+0x1e>
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	91 05       	cpc	r25, r1
 15a:	59 f4       	brne	.+22     	; 0x172 <blinkLED+0x32>
 15c:	06 c0       	rjmp	.+12     	; 0x16a <blinkLED+0x2a>
 15e:	88 e0       	ldi	r24, 0x08	; 8
 160:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tmpB>
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	08 95       	ret
 16a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <tmpB>
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	08 95       	ret

00000174 <threeLED>:
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	91 05       	cpc	r25, r1
 178:	c9 f0       	breq	.+50     	; 0x1ac <threeLED+0x38>
 17a:	1c f4       	brge	.+6      	; 0x182 <threeLED+0xe>
 17c:	00 97       	sbiw	r24, 0x00	; 0
 17e:	81 f0       	breq	.+32     	; 0x1a0 <threeLED+0x2c>
 180:	06 c0       	rjmp	.+12     	; 0x18e <threeLED+0x1a>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	91 05       	cpc	r25, r1
 186:	c1 f0       	breq	.+48     	; 0x1b8 <threeLED+0x44>
 188:	83 30       	cpi	r24, 0x03	; 3
 18a:	91 05       	cpc	r25, r1
 18c:	49 f0       	breq	.+18     	; 0x1a0 <threeLED+0x2c>
 18e:	82 30       	cpi	r24, 0x02	; 2
 190:	91 05       	cpc	r25, r1
 192:	61 f0       	breq	.+24     	; 0x1ac <threeLED+0x38>
 194:	83 30       	cpi	r24, 0x03	; 3
 196:	91 05       	cpc	r25, r1
 198:	79 f0       	breq	.+30     	; 0x1b8 <threeLED+0x44>
 19a:	81 30       	cpi	r24, 0x01	; 1
 19c:	91 05       	cpc	r25, r1
 19e:	89 f4       	brne	.+34     	; 0x1c2 <threeLED+0x4e>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tmpA>
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	08 95       	ret
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tmpA>
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	08 95       	ret
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <tmpA>
 1be:	83 e0       	ldi	r24, 0x03	; 3
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	08 95       	ret

000001c4 <speaker>:
 1c4:	20 b1       	in	r18, 0x00	; 0
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	21 f0       	breq	.+8      	; 0x1d2 <speaker+0xe>
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	91 05       	cpc	r25, r1
 1ce:	71 f0       	breq	.+28     	; 0x1ec <speaker+0x28>
 1d0:	07 c0       	rjmp	.+14     	; 0x1e0 <speaker+0x1c>
 1d2:	41 e0       	ldi	r20, 0x01	; 1
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	2f 3f       	cpi	r18, 0xFF	; 255
 1d8:	09 f4       	brne	.+2      	; 0x1dc <speaker+0x18>
 1da:	40 e0       	ldi	r20, 0x00	; 0
 1dc:	84 2f       	mov	r24, r20
 1de:	93 2f       	mov	r25, r19
 1e0:	00 97       	sbiw	r24, 0x00	; 0
 1e2:	21 f0       	breq	.+8      	; 0x1ec <speaker+0x28>
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	91 05       	cpc	r25, r1
 1e8:	31 f0       	breq	.+12     	; 0x1f6 <speaker+0x32>
 1ea:	08 95       	ret
 1ec:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <tmpC>
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	08 95       	ret
 1f6:	20 e1       	ldi	r18, 0x10	; 16
 1f8:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <tmpC>
 1fc:	08 95       	ret

000001fe <combineSM>:
 1fe:	00 97       	sbiw	r24, 0x00	; 0
 200:	49 f4       	brne	.+18     	; 0x214 <combineSM+0x16>
 202:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <tmpB>
 206:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <tmpA>
 20a:	23 2b       	or	r18, r19
 20c:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <tmpC>
 210:	23 2b       	or	r18, r19
 212:	25 b9       	out	0x05, r18	; 5
 214:	08 95       	ret

00000216 <TimerOn>:
 216:	8b e0       	ldi	r24, 0x0B	; 11
 218:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 21c:	8d e7       	ldi	r24, 0x7D	; 125
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 224:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 228:	82 e0       	ldi	r24, 0x02	; 2
 22a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 22e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 232:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 236:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 23a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 23e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 242:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 246:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 24a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 24e:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 252:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 256:	8f b7       	in	r24, 0x3f	; 63
 258:	80 68       	ori	r24, 0x80	; 128
 25a:	8f bf       	out	0x3f, r24	; 63
 25c:	08 95       	ret

0000025e <TimerSet>:
}


void TimerSet(unsigned long M) {
	_avr_timer_M = M;
 25e:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 262:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 266:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 26a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
 26e:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 272:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 276:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 27a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 27e:	08 95       	ret

00000280 <main>:
unsigned char tmpA;
unsigned char tmpB;
unsigned char tmpC;

int main(void) {
	DDRA = 0x00; PORTA = 0xFF;
 280:	11 b8       	out	0x01, r1	; 1
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 286:	84 b9       	out	0x04, r24	; 4
 288:	15 b8       	out	0x05, r1	; 5
	const unsigned char timerPeriod = 1;
	unsigned short bElapsedTime = 1000;
	unsigned short thElapsedTime = 300;
	unsigned short speakerElapsedTime = 2;

	TimerOn();
 28a:	c5 df       	rcall	.-118    	; 0x216 <TimerOn>
	TimerSet(timerPeriod);
 28c:	61 e0       	ldi	r22, 0x01	; 1
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	e4 df       	rcall	.-56     	; 0x25e <TimerSet>
	CombineStates cState = combine;
	SpeakerStates speakerState = low;
	const unsigned char timerPeriod = 1;
	unsigned short bElapsedTime = 1000;
	unsigned short thElapsedTime = 300;
	unsigned short speakerElapsedTime = 2;
 296:	c2 e0       	ldi	r28, 0x02	; 2
 298:	d0 e0       	ldi	r29, 0x00	; 0
	SeqStates sState = seqInit;
	CombineStates cState = combine;
	SpeakerStates speakerState = low;
	const unsigned char timerPeriod = 1;
	unsigned short bElapsedTime = 1000;
	unsigned short thElapsedTime = 300;
 29a:	0f 2e       	mov	r0, r31
 29c:	fc e2       	ldi	r31, 0x2C	; 44
 29e:	ef 2e       	mov	r14, r31
 2a0:	ff 24       	eor	r15, r15
 2a2:	f3 94       	inc	r15
 2a4:	f0 2d       	mov	r31, r0
	States state = bInit;
	SeqStates sState = seqInit;
	CombineStates cState = combine;
	SpeakerStates speakerState = low;
	const unsigned char timerPeriod = 1;
	unsigned short bElapsedTime = 1000;
 2a6:	08 ee       	ldi	r16, 0xE8	; 232
 2a8:	13 e0       	ldi	r17, 0x03	; 3


	States state = bInit;
	SeqStates sState = seqInit;
	CombineStates cState = combine;
	SpeakerStates speakerState = low;
 2aa:	c1 2c       	mov	r12, r1



	States state = bInit;
	SeqStates sState = seqInit;
	CombineStates cState = combine;
 2ac:	d1 2c       	mov	r13, r1
	DDRB = 0xFF; PORTB = 0x00;



	States state = bInit;
	SeqStates sState = seqInit;
 2ae:	a1 2c       	mov	r10, r1
	DDRA = 0x00; PORTA = 0xFF;
	DDRB = 0xFF; PORTB = 0x00;



	States state = bInit;
 2b0:	b1 2c       	mov	r11, r1

	TimerOn();
	TimerSet(timerPeriod);

	while(1) {
		if (bElapsedTime >= 1000) {
 2b2:	08 3e       	cpi	r16, 0xE8	; 232
 2b4:	83 e0       	ldi	r24, 0x03	; 3
 2b6:	18 07       	cpc	r17, r24
 2b8:	30 f0       	brcs	.+12     	; 0x2c6 <main+0x46>
			state = blinkLED(state);
 2ba:	8b 2d       	mov	r24, r11
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	40 df       	rcall	.-384    	; 0x140 <blinkLED>
 2c0:	b8 2e       	mov	r11, r24
			bElapsedTime = 0;
 2c2:	00 e0       	ldi	r16, 0x00	; 0
 2c4:	10 e0       	ldi	r17, 0x00	; 0
		}

		if (thElapsedTime >= 300) {
 2c6:	8c e2       	ldi	r24, 0x2C	; 44
 2c8:	e8 16       	cp	r14, r24
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	f8 06       	cpc	r15, r24
			sState = threeLED(sState);
 2ce:	30 f0       	brcs	.+12     	; 0x2dc <main+0x5c>
 2d0:	8a 2d       	mov	r24, r10
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	4f df       	rcall	.-354    	; 0x174 <threeLED>
 2d6:	a8 2e       	mov	r10, r24
			thElapsedTime = 0;
 2d8:	e1 2c       	mov	r14, r1
 2da:	f1 2c       	mov	r15, r1
		}

		if (speakerElapsedTime >= 2) {
 2dc:	c2 30       	cpi	r28, 0x02	; 2
 2de:	d1 05       	cpc	r29, r1
			speakerState = speaker(speakerState);
 2e0:	30 f0       	brcs	.+12     	; 0x2ee <main+0x6e>
 2e2:	8c 2d       	mov	r24, r12
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	6e df       	rcall	.-292    	; 0x1c4 <speaker>
			speakerElapsedTime = 0;
 2e8:	c8 2e       	mov	r12, r24
 2ea:	c0 e0       	ldi	r28, 0x00	; 0
		}
		//PORTB = tmpB | tmpA;
		cState = combineSM(cState);
 2ec:	d0 e0       	ldi	r29, 0x00	; 0
 2ee:	8d 2d       	mov	r24, r13
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	85 df       	rcall	.-246    	; 0x1fe <combineSM>
 2f4:	d8 2e       	mov	r13, r24
		while(!TimerFlag) {}
 2f6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <TimerFlag>
 2fa:	88 23       	and	r24, r24
 2fc:	e1 f3       	breq	.-8      	; 0x2f6 <main+0x76>
		TimerFlag = 0;
 2fe:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <TimerFlag>
		bElapsedTime += timerPeriod;
 302:	0f 5f       	subi	r16, 0xFF	; 255
 304:	1f 4f       	sbci	r17, 0xFF	; 255
		thElapsedTime += timerPeriod;
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	e8 1a       	sub	r14, r24
 30a:	f8 0a       	sbc	r15, r24
		speakerElapsedTime += timerPeriod;
 30c:	21 96       	adiw	r28, 0x01	; 1
	}
 30e:	d1 cf       	rjmp	.-94     	; 0x2b2 <main+0x32>

00000310 <_exit>:
 310:	f8 94       	cli

00000312 <__stop_program>:
 312:	ff cf       	rjmp	.-2      	; 0x312 <__stop_program>
